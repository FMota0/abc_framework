// This is a skeleton starter React component generated by Plasmic.
// This file is owned by you, feel free to edit as you see fit.
import React, { useState } from "react";
import { useForm } from "react-hook-form";
import { useSelector, useDispatch } from "react-redux";
import { RESEARCH_DESCRIPTION_ERROR, RESEARCH_DESCRIPTION_OPTIONS, RESEARCH_LINK_ERROR, RESEARCH_LINK_OPTIONS, RESEARCH_TITLE_ERROR, RESEARCH_TITLE_OPTIONS } from "../constants/form";
import { editResearch } from "../store/programs/actions";
import { getResearch } from "../store/programs/selectors";
import { PlasmicResearchCard } from "./plasmic/abc_framework/PlasmicResearchCard";

function ResearchCard(props) {
  const dispatch = useDispatch();

  const { register, handleSubmit, formState: { errors } } = useForm();

  const { researchProgramId, researchId, ...rest } = props;

  const research = useSelector(getResearch(researchProgramId, researchId));
  
  const [isEditing, setIsEditing] = useState(false);
  const [researchEdit, setResearchEdit] = useState(research);

  return (
    <PlasmicResearchCard
      withEdit={isEditing}
      edit={{
        onClick: () => setIsEditing(true),
      }}
      titleInput={{
        textbox: {
          ...register("title", RESEARCH_TITLE_OPTIONS),
          value: researchEdit.title,
          onChange: (e) => setResearchEdit(r => ({ ...r, title: e.target.value })),
        },
        invalid: !!errors.title,
        error: RESEARCH_TITLE_ERROR,
      }}
      descriptionInput={{
        textarea: {
          ...register("description", RESEARCH_DESCRIPTION_OPTIONS),
          value: researchEdit.description,
          onChange: (e) => setResearchEdit(r => ({ ...r, description: e.target.value })),
        },
        invalid: !!errors.description,
        error: RESEARCH_DESCRIPTION_ERROR,
      }}
      linkInput={{
        textbox: {
          ...register("link", RESEARCH_LINK_OPTIONS),
          value: researchEdit.link,
          onChange: (e) => setResearchEdit(r => ({ ...r, link: e.target.value })),
        },
        invalid: !!errors.link,
        error: RESEARCH_LINK_ERROR,
      }}
      saveBtn={{
        button: {
          onClick: handleSubmit(() => {
            dispatch(editResearch(researchProgramId, researchId, researchEdit));
            setIsEditing(false);
          }),
        },
      }}
      cancelBtn={{
        button: {
          onClick: () => setIsEditing(false),
        },
      }}
      {...rest} 
    />
  );
}

export default ResearchCard;
